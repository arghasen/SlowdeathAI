(defrule
(unit-type-count villager > 0 )
=>
(chat-local-to-self "I just made my first rule!!")
(disable-self)
)

(defrule
(can-build house)
(housing-headroom < 4) ;the difference between the current population and supportable population (not the
;amount of population houses support)
(population-headroom > 3) ;the difference between the current population and the population limit
=>
(build house)
)

(defrule
(current-age == dark-age)
(unit-type-count-total villager < 30)
(can-train villager)
=>
(train villager)
)

(defrule
(building-type-count-total house > 0) ; We want to build a house before a mill
(building-type-count-total mill == 0) ; Prevents the construction of multiple mills
(resource-found food) ; Builds a mill only if forage bushes or deer is found
(can-build mill)
=>
(build mill)
)